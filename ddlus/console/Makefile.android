OBJ      = analyze.o calc.o cmd.o date.o double.o file.o flow.o format.o func.o history.o if.o parse.o stack.o str.o var.o array.o num2text.o num2text_en.o combine.o
LINKOBJ  = analyze.o calc.o cmd.o date.o double.o file.o flow.o format.o func.o history.o if.o parse.o stack.o str.o var.o array.o num2text.o num2text_en.o combine.o
BIN      = double
CXXFLAGS = $(CXXINCS)  -DCONSOLE -Wall
CFLAGS   = $(INCS)  -DCONSOLE -Wall
RM       = rm -f

.PHONY: all all-before all-after clean clean-custom

all: all-before $(BIN) all-after

clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CC) $(LINKOBJ) -o $(BIN) $(LIBS)

analyze.o: analyze.c
	$(CC) -c analyze.c -o analyze.o $(CFLAGS)

calc.o: calc.c
	$(CC) -c calc.c -o calc.o $(CFLAGS)

cmd.o: cmd.c
	$(CC) -c cmd.c -o cmd.o $(CFLAGS)

date.o: date.c
	$(CC) -c date.c -o date.o $(CFLAGS)

double.o: double.c
	$(CC) -c double.c -o double.o $(CFLAGS)

file.o: file.c
	$(CC) -c file.c -o file.o $(CFLAGS)

flow.o: flow.c
	$(CC) -c flow.c -o flow.o $(CFLAGS)

format.o: format.c
	$(CC) -c format.c -o format.o $(CFLAGS)

func.o: func.c
	$(CC) -c func.c -o func.o $(CFLAGS)

history.o: history.c
	$(CC) -c history.c -o history.o $(CFLAGS)

if.o: if.c
	$(CC) -c if.c -o if.o $(CFLAGS)

parse.o: parse.c
	$(CC) -c parse.c -o parse.o $(CFLAGS)

stack.o: stack.c
	$(CC) -c stack.c -o stack.o $(CFLAGS)

str.o: str.c
	$(CC) -c str.c -o str.o $(CFLAGS)

var.o: var.c
	$(CC) -c var.c -o var.o $(CFLAGS)

array.o: array.c
	$(CC) -c array.c -o array.o $(CFLAGS)

num2text.o: num2text.c
	$(CC) -c num2text.c -o num2text.o $(CFLAGS)

num2text_en.o: num2text_en.c
	$(CC) -c num2text_en.c -o num2text_en.o $(CFLAGS)

combine.o: combine.c
	$(CC) -c combine.c -o combine.o $(CFLAGS)